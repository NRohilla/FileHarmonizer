@model IEnumerable<Harmonizer.UI.Models.RegisterUser>

@{
    WebGrid webGrid = new WebGrid(source: Model, canPage: false, canSort: false);
}

@if (Model.Count() > 0)
{
    <div class="row mb-2">
        <div class="col-md-6 float-left">
            <input type="button" id="btnChkAll" class="btn btn-info" name="check all" value="Check All" />
            <input type="button" id="btnUnChkAll" class="btn btn-info" name="uncheck all" value="UnCheck All" />
        </div>
        @*<div class="col-md-6 text-right">
                <input type="button" class="btn btn-info" name="Print" id="btnArchiveTemplate" value="Archive" />
                <input type="button" class="btn btn-info" name="Print" id="btnDownloadTemplate" value="Download" />
                <input type="button" class="btn btn-info" name="Print" id="btnPrintTemplate" value="Print" />
            </div>*@
    </div>
    <div class="row scrollable-table">
        <div class="col-md-12">
            @webGrid.GetHtml(
        htmlAttributes: new { @id = "TeamUserDetails", @class = "table table-bordered table-sm table-striped search-replace-table sticky-header" },
        columns: webGrid.Columns(
        webGrid.Column("*", format: @<text>
            <input type="checkbox" class="check" id="chk" name="chk" /> </text>),
          webGrid.Column("User ID", format: @<span>@Html.Label("lblUserID", String.Format("{0}", (string)item.User.UserID), new { @id = "lblUserID" })</span>),
                                  webGrid.Column("Name", format: @<span>@Html.Label("lblUserName", String.Format("{0} {1}", (string)item.PersonalInfo.FirstName, (string)item.PersonalInfo.LastName))</span>),
                               webGrid.Column("AKA", format: @<span>@Html.Label("lblAKA", (string)item.PersonalInfo.AKA, new { @id = "lblAKA" })</span>),
                     webGrid.Column("Role", format: @<span>@Html.Label("lblRole", (string)item.PersonalInfo.TeamMemberRole)</span>),
                      webGrid.Column("Email ID", format: @<span>@Html.Label("lblPersonalEmail", (string)item.User.EmailID, new { @id = "lblPesonalEmail" })</span>),
                                   webGrid.Column("Active Date", format: @<span>@Html.Label("lblPersonalActiveDate", String.Format("{0:d}", (DateTime)item.User.ActiveDate), new { @id = "lblActiveDate" })</span>),
                                                  webGrid.Column("Expire Date", format: @<text>
                                                    @Html.Label("lblExpireDate", String.Format("{0:d}", (DateTime)item.User.ExpireDate), new { @id = "lblExpireDate", @class = "read" })
                                                    @Html.TextBox("txtExpiredate", String.Format("{0:d}", (DateTime)item.User.ExpireDate), new { @id = "txtExpiredate", @class = "edit" })
                                                </text>),

                                           webGrid.Column("Action", format: @<text>
                                            <label class="switch">
                                                <input type="checkbox" id="chkStatus">
                                                <span class="slider round"></span>
                                            </label>
                                            <input type="hidden" id="hiddenStatus" value="@item.User.IsActive" />
                                        </text>),
                                webGrid.Column("Exp. Date", format: @<text>
                                    <input type="button" name='btnExpDate' value="Exp.Date" class="btn-info btn-changedate read" />
                                    <input type="button" name='btnExpDateUpdate' value="Update" class="btn-info edit btnExpDateUpdate" />
                                    <input type="button" name='btnExpDateCancel' value="Cancel" class="btn-info edit btnExpDateUpdateCancel" />
                                </text>
                                                      )

                                             ))
        </div>
    </div>
}
else
{
    <div class="row">
        <div class="col-md-12">
            <span class="text-danger">User not maintain.</span>
        </div>
    </div>
}


<script>
    $(document).ready(function () {
        $('#btnChkAll').click(function () {
            $("#TeamUserDetails td input[type=checkBox][class=check]").prop("checked", true);
        });

        $('#btnUnChkAll').click(function () {
            $("#TeamUserDetails td input[type=checkBox][class=check]").removeAttr('checked');
        });


        $('.edit').hide();
        var table = $("#TeamUserDetails tbody");
        table.find('tr').each(function (key, val) {
            var status = $(this).find('#hiddenStatus').val();
            var CheckboxStatus = $(this).find('#chkStatus');
            var slider = $(this).find('.slider');
            if (status != '') {
                //alert('' + status);
                CheckboxStatus.prop("checked", true);
            }
            else {
                CheckboxStatus.removeAttr('checked');
            }
        });
    });

</script>

<script type="text/javascript">
    $(function () {
        // Delete
        $('.slider').click(function (e) {
            //alert('clicked');
            e.preventDefault();
            var retValue='';
            var tr = $(this).parents('tr:first');
            var CheckboxStatus = tr.find('#chkStatus');
            var userId = tr.find('#lblUserID').text();
            if (CheckboxStatus.is(':checked')) {
                //alert('un checked');

                retValue = UpdateStatus(false,userId);
                //debugger;
                if (retValue == "1") {
                    CheckboxStatus.removeAttr('checked');
                }

            }
            else
            {
                //alert('checked');
                retValue = UpdateStatus(true, userId);
                //debugger;
                if (retValue == "1") {
                    CheckboxStatus.prop("checked", true);
                }
            }

        });

        //Edit
        $('.btn-changedate').click(function (e) {
            //alert('clicked change ex. date');
            e.preventDefault();
            var tr = $(this).parents('tr:first');
            tr.find('.edit, .read').toggle();

        });
        // update
        $('.btnExpDateUpdate').click(function (e) {
            var tr = $(this).parents('tr:first');
            var userId = tr.find('#lblUserID').text();
            var expireDate = tr.find('#txtExpiredate').val();
              $.ajax({
                type: "POST",
                url: '@Url.Action("UpdateUserExpireDateByAdmin", "Admin")',
                data: '{date: "' + expireDate + '",userId:"' + userId+'" }',
                dataType: "json",
                async: false,
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    // Nothing
                    debugger;
                    if (data.resultValue > 0) {
                        //window.location.reload(true);
                        tr.find('#lblExpireDate').text(expireDate);
                        tr.find('.edit, .read').toggle();
                    }
                    else if (data.resultValue == -2) {
                        alert(data.msgValue);
                    }
                    else if (data.resultValue == -1) {
                        alert('Expire date greate then business partner exp. date. Please contact to admin/staff memmber.');
                    }
                },
                error: function (error) {
                    alert("Error! Please try again.");
                }
            });
        });

        // cancel
        $('.btnExpDateUpdateCancel').click(function (e) {
            //window.location.reload(true);
            e.preventDefault();
            var tr = $(this).parents('tr:first');
            tr.find('.edit, .read').toggle();
        });

    });

        function UpdateStatus(status,userId) {
            debugger;
            var retData;
            $.ajax({
                type: "POST",
                url: '@Url.Action("UpdateStatus", "User")',
                data: '{status: "' + status + '",userId:"' + userId+'" }',
                dataType: "json",
                async: false,
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    // Nothing
                    debugger;
                    if (data > 0) {
                        retData = "1";
                    }
                    else {
                        retData = "0";
                    }
                },
                error: function (error) {
                    alert("Error! Please try again.");
                }
            });
            return retData;
        }

</script>

