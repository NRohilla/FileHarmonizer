@using System.Collections
@{
    ViewBag.Title = "File Harmonizer - Filter and Template";
}
<link href="~/Content/select2.css" rel="stylesheet" />
<script src="~/Scripts/select2.js"></script>
@*<form method="post" action='@Url.Action("UploadFileData","FHFile")' id="formUploadFile" enctype="multipart/form-data">*@
<div class="form-horizontal my-3">
    <div class="container">
        <div id="divPartial">
            @Html.Action("UserHeader", "FHFile")
        </div>
        <div class="blink_heading">
            <h4>Create Filter and Template</h4>
            <blink>
                <span style="color:red;font-size:18px;" id="messageData" class="blink ml-4">

                </span>
            </blink>
        </div>
        <hr />
        <div class="box">
            <div class="row">

                <div class="col-md-6">
                    <div class="row mt-2">
                        <div class="col-md-3">
                            <label class="control-label"> Select source file</label>
                        </div>
                        <div class="col-md-9">
                            <input type="file" name="fileupload" id="fileupload" />@*onchange="fileuploadnew()*@
                            <p>
                                <strong>Files You Selected:</strong>
                            </p>
                        </div>


                    </div>

                    <div class="table-responsive file-list">
                        <table id="filelist" class="table table-condensed table-borderless"></table>
                    </div>
                    <div class="row mt-3">
                        <div class="col-md-3"><label class="control-label">Template Type</label></div>
                        <div class="col-md-9">
                            @Html.DropDownList("Sectore", new SelectList((IEnumerable)ViewData["lstSectore"], "Value", "Text", Session["SECID"].ToString()), new { @class = "form-control js-example-basic-single" })
                        </div>

                    </div>
                    @*<div class="row mt-3">
                            <div class="col-md-3"><label class="control-label">Template Name</label></div>
                            <div class="col-md-9"><input type="text" name="templateName" class="form-control" id="templateName" /></div>

                        </div>
                        <div class="row mt-3">
                            <div class="col-md-3"><label class="control-label">Template Description</label></div>
                            <div class="col-md-9"><input type="text" name="templateDesc" class="form-control" id="templateDesc" /></div>

                        </div>*@

                    <div class="row mt-3">
                        <div class="col-md-3"><label class="control-label">Search Word</label></div>
                        <div class="col-md-9">
                            <input type="text" name="SearchData" class="form-control" id="SearchData" />
                        </div>

                    </div>
                    <div class="row mt-3">
                        <div class="col-md-3"><label class="control-label">Tag</label></div>
                        <div class="col-md-6">
                            @*@Html.DropDownList("Tag", new SelectList((IEnumerable)ViewData["lstStandardGlobalTag"], "Value", "Text"), new { @class = "form-control" })*@
                            <select id="ddlTag" class="form-control js-example-basic-single"></select>
                        </div>
                        <div class="col-md-3">
                            <input type="button" id="btnAddNewTag" style="width: 100px;" value="+ Add New Tag" class="btn-info btn-sm float-right" data-toggle="modal" data-target="#myModal" />
                        </div>

                    </div>

                    <div class="row mt-3">
                        <div class="col-md-3"><label class="control-label">Instruction</label></div>
                        <div class="col-md-9">
                            <select class="form-control" name="Instruction" id="Instruction">
                                <option value="0">None</option>
                                <option value="1">Upper case</option>
                                <option value="2">Lower case</option>
                            </select>
                        </div>

                    </div>
                    <div class="row mt-3">

                        <div class="col-md-12 col-sm-offset-2">
                            <input type="button" id="btnlst" value="+ Add to list" class="btn-info btn-sm float-right" /> &nbsp;&nbsp;
                            <input type="button" id="btnMasslst" value="Upload Filter" class="btn-info btn-sm float-right  mr-3" />
                            <input type="button" id="btnUploadTemplate" value="Upload Created Template" class="btn-info btn-sm float-right  mr-3" />
                            <input type="button" name="btnsubmit" value="Create New Filter" id="btnsubmit" class="btn btn-sm btn-info  float-right  mr-3" />

                        </div>

                    </div>
                    <div class="row mt-3 scrollable-table" style="height:340px;">
                        <div class="col-md-9 offset-md-3 ">
                            <table id="tblTagSearch" class="table table-bordered table-sm table-striped search-replace-table ">
                                <thead>
                                    <tr>
                                        <th>Search Data</th>
                                        <th>Tag name</th>
                                        <th>Expression</th>
                                        <th>Remove</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>


                            </table>


                        </div>
                    </div>
                    <div class="row mt-1">
                        <div class="col-md-12">

                        </div>

                    </div>
                    <div class="row mt-5">
                        <div class="col-md-3">
                            <span style="color:red;display:none;">
                                @ViewBag.message
                            </span>
                        </div>
                        <div class="col-md-3"></div>
                        <div class="col-md-3"></div>
                        <div class="col-md-3"></div>
                    </div>

                </div>
                <div class="col-md-6">
                    <div class="mt-2">
                        <div class="">
                            <div class="preview-box" style="height:700px">
                                <div class="preview-data" id="previewData">
                                    <h4 style="display:block">Preview</h4>
                                    <div style="display:none">
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        v
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        v
                                        v
                                        v
                                        v
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        v
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        v

                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        v
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        v
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd   asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        v
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        v
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd   asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                        asd asjhdbahjskd jkhsa bdkjh asjhd asdkasdlkjh askjdkjhas dhk gasjhd gsahdg ahsdg jhas dgjh ashd gasjhd gjhasg djh asjhdg asjhd gjhas gdh ashdg jhasg djhg asjhdg asjhg djhasg jdhg asjhd
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<!-- The Modal -->
<div class="modal" id="myModal">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Add Custom Tag</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-3"><label class="control-label">Custom Tag</label></div>
                    <div class="col-md-8">
                        <input type="text" name="newTagName" class="form-control" id="newTagName" />
                    </div>
                    <div class="col-md-1">
                        <a class="badge badge-info text-white" data-toggle="tooltip" data-placement="top" title="Tip: Tag Name <TagName>">?</a>
                    </div>

                </div>
                <div class="row mt-3">
                    <div class="col-md-3"><label class="control-label">Description</label></div>
                    <div class="col-md-9"><textarea name="newTagDesc" class="form-control" id="newTagDesc"></textarea></div>

                </div>
            </div>
            <!--Nitin Check for expiry of account -->
            @{
                if (ViewBag.ExpireDate != null && Convert.ToDateTime(ViewBag.ExpireDate) > DateTime.Now)
                {
                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <button type="button" style="width: 100px;" class="btn-info btn-sm" id="btnsave">Save</button> &nbsp;&nbsp;&nbsp; <button type="button" style="width: 100px; margin-right: 27px;" id="btnmodeldismis" class="btn-danger btn-sm" data-dismiss="modal">Close</button>
                    </div>
                }
            }


        </div>
    </div>
</div>
<div id="wait" style="display:none;width:100%;height:100%;position:fixed;top:0px;left:0px;bottom:0px;right:0px;padding:20%;z-index: 99999;background-color:rgba(0,0,0,0.3);text-align:center;">
    <img src='~/images/sa.gif' width="150" height="150" /><br>Loading..
</div>


<input type="file" id="fileuploadSearchTagList" name="fileuploadSearchTagList" class="hidden" style="visibility: hidden;" />



@*</form>*@
<style>
    .filectrl {
        color: red;
    }
</style>

<script>
    var formDataViewFile = new FormData();
    var formDataTagList = new FormData();
    var formData = new FormData();
    var filearr = [];

     ////-Nitin Check for expiry of account
    var compare_dates = function (edate1, cdate2) {
        if (edate1 < cdate2)
            return true;
        else {
            return false;
        }
    }

    $(document).ready(function () {

        ////-Nitin Check for expiry of account
        /////To show the Pop Up on page load
         var edate = '@ViewBag.ExpireDate';
        var cdate = '@DateTime.Today.Date.ToShortDateString()';
        if (edate != "") {
        	if (compare_dates(new Date(edate), new Date(cdate)) == true) {
        		$('#modelbodydataActivation').load('@Url.Action("ExipreActivation", "FHFile", new { token = Request.QueryString["token"] })');
                $('#btnShowDataActivation').click();
                $('#btnAddNewTag').hide();
                $('#btnsubmit').hide();
                $('#btnUploadTemplate').hide();
                $('#btnMasslst').hide();
                $('#btnlst').hide();

        	}
        }




        $("#fileupload").on("change", function () {
            debugger;
            formDataViewFile.append("ViewFile", document.getElementById("fileupload").files[0])
            $("#wait").css("display", "block");
            $.ajax({
                type: "POST",
                url: '@Url.Action("ViewPreview", "FHFile")',
                data: formDataViewFile,
                dataType: 'json',
                contentType: false,
                processData: false,
                enctype: 'multipart/form-data',
                async: false,
                success: function (data) {
                    var url='@Url.Action("ViewFile", "FHManage")';
                    $("#wait").css("display", "none");
                    formDataViewFile = new FormData();
                    $('#previewData').html('');
                    $('#previewData').load(url + '?FilePath=' + data);
                    preview(data);
                },
                error: function (error) {
                    $("#wait").css("display", "none");
                    formDataViewFile = new FormData();
                    $('#messageData').text("Error! Preview file");
                    $('#messageData').css('color', 'red');
                    setTimeout(function () {
                        $('#messageData').text('');
                    }, 3000);
                }
            });
        });

        function preview(data) {
            var flag = false;
            $("#fileupload").removeClass("filectrl");
            var input = document.getElementById("fileupload");
            if (filearr.length == 0) {
                AddOrDeleteFile(input, data);
            }
            else {
                for (var i = 0; i < filearr.length; i++) {
                    if (filearr[i] !== input.files[0].name) {
                        flag = false;
                    }
                    else {
                        flag = true;
                        break;
                    }
                }

                if (flag == false) {
                    AddOrDeleteFile(input, data);
                }
            }
        }

        function AddOrDeleteFile(input, data) {
            var table = document.getElementById("filelist");
            var tr = document.createElement('tr');
            var td1 = document.createElement("td");
            td1.innerHTML = input.files[0].name;
            td1.id = input.files[0].name;
            td1.setAttribute('onclick', 'previewDocument("' + data + '")');
            tr.appendChild(td1);

            var td2 = document.createElement("td");
            var button = document.createElement("button");
            button.innerHTML = "&times;";
            button.classList.add('btndelete');
            button.onclick = function () {
                var row = this.parentNode.parentNode;
                var index = filearr.indexOf(row.textContent.replace(/.$/, ""));
                if (index !== -1) {
                    filearr.splice(index, 1);
                    table.deleteRow(row.rowIndex);
                    debugger;
                    var files = formData.getAll("FileUpload");
                    files.splice(files.indexOf(files.find(function (element) {
                        return element.name == row.textContent.replace(/.$/, "");
                    })), 1);
                    formData.delete("FileUpload");
                    $.each(files, function (i, v) {
                        formData.append("FileUpload", v);
                    });
                }
            };
            td2.appendChild(button);
            tr.appendChild(td2);

            table.appendChild(tr);
            filearr.push(input.files[0].name);
            formData.append("FileUpload", document.getElementById("fileupload").files[0])
        }

        $('.js-example-basic-single').select2();
        var cart = {};
        cart.products = [];
        $('#tblTagSearch').hide();
        localStorage.setItem('cart', JSON.stringify(cart));
        bindTagDropdownlist();

        $('#btnlst').click(function ()
        {
            var flag = false;
            flag = validateAddToList();
            if (flag == true)
            {
                var product = {};
                product.Name = $('#SearchData').val();
                product.Tag = $('#ddlTag').children("option:selected").val();
                product.Expression = $('#Instruction').val();
                addToCart(product);
                bindData($('#SearchData').val(), $('#ddlTag').children("option:selected").val(), $('#Instruction').val());
            }

            // clear serach box
            $('#SearchData').val('');
        });

        $('#btnUploadTemplate').click(function () {
            debugger;
            var tokenData = getUrlVars()["token"];
            var flag = false;
            debugger;
            flag = validateUploadData();
            //if (flag == true) { flag = validatetable();}

            if (flag == true) {

                var searchData = [];
                var cartData = JSON.parse(localStorage.getItem('cart'));
                $.each(cartData.products, function (i, e) {
                    var searchlist = {};
                    searchlist.ID = i;
                    searchlist.SearchWord = e.Name;
                    searchlist.TagName = escapeHTML(e.Tag);
                    searchlist.Instruction = e.Expression;
                    searchData.push(searchlist);
                });

                var totalFiles = document.getElementById("fileupload").files.length;
                debugger;
                formData.append("ListofSearchData", JSON.stringify(searchData));//0
                formData.append("Sectore", $('#Sectore option:selected').text().trim());//1
               // formData.append("TemplateName", $('#templateName').val().trim());//2
               // formData.append("TemplateDesc", $('#templateDesc').val().trim());//3
                formData.append("SectoreCode", $('#Sectore').val().trim());//4
                $("#wait").css("display", "block");
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("UploadTemplate", "FHFile")',
                    data: formData,
                    dataType: 'json',
                    contentType: false,
                    processData: false,
                    enctype: 'multipart/form-data',
                    success: function (msg) {
                        debugger;
                        $("#wait").css("display", "none");
                        formData = new FormData();
                        clearListFileUpload();
                        ClearSearchDataList();
                        if ("File uploaded successfully" === msg) {
                            debugger;
                            $('#messageData').text(msg);
                            $('#messageData').css('color', 'green');
                            var url = '@Url.Action("ManageFilter", "FHManage")';
                            setTimeout(function () {
                                window.location.href = url + "?token=" + tokenData;
                            }, 2000);
                        }
                        else {
                            $('#messageData').text(msg);
                            $('#messageData').css('color', 'red');
                            setTimeout(function () {
                                window.location.reload(true);
                            }, 3000);
                        }
                        //alert(msg);
                        //window.location.reload(true);
                       // $("#wait").css("display", "none");
                    },
                    error: function (error) {
                        debugger;
                        $("#wait").css("display", "none");
                        formData = new FormData();
                        clearListFileUpload();
                        //alert("Error! File upload.");
                        //window.location.reload(true);
                        // $("#wait").css("display", "none");
                        $('#messageData').text("Error! File upload.Call auto refresh");
                        $('#messageData').css('color', 'red');
                        setTimeout(function () {
                            window.location.reload(true);
                        }, 2000);
                    }
                });
            }

        });


        $('#btnsubmit').click(function () {
            var tokenData = getUrlVars()["token"];
            var flag = false;
            flag = validateUploadData();
            if (flag == true) { flag = validatetable();}

            if (flag == true) {

                // Ajax call
                var searchData = [];
                var cartData = JSON.parse(localStorage.getItem('cart'));
                $.each(cartData.products, function (i, e) {
                    var searchlist = {};
                    searchlist.ID = i;
                    searchlist.SearchWord = e.Name;
                    searchlist.TagName = escapeHTML(e.Tag);
                    searchlist.Instruction = e.Expression;
                    searchData.push(searchlist);
                });

                var totalFiles = document.getElementById("fileupload").files.length;

                formData.append("ListofSearchData", JSON.stringify(searchData));//0
                formData.append("Sectore", $('#Sectore option:selected').text().trim());//1
               // formData.append("TemplateName", $('#templateName').val().trim());//2
               // formData.append("TemplateDesc", $('#templateDesc').val().trim());//3
                formData.append("SectoreCode", $('#Sectore').val().trim());//4
                $("#wait").css("display", "block");
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("UploadFileData", "FHFile")',
                    data: formData,
                    dataType: 'json',
                    contentType: false,
                    processData: false,
                    enctype: 'multipart/form-data',
                    success: function (msg) {
                        debugger;
                        $("#wait").css("display", "none");
                        formData = new FormData();
                        clearListFileUpload();
                        ClearSearchDataList();
                        if ("File uploaded successfully" === msg) {
                            $('#messageData').text(msg);
                            $('#messageData').css('color', 'green');
                            var url = '@Url.Action("ManageFilter", "FHManage")';
                            setTimeout(function () {
                                window.location.href = url + "?token=" + tokenData;
                            }, 2000);
                        }
                        else {
                            $('#messageData').text(msg);
                            $('#messageData').css('color', 'red');
                            setTimeout(function () {
                                window.location.reload(true);
                            }, 3000);
                        }
                        //alert(msg);
                        //window.location.reload(true);
                       // $("#wait").css("display", "none");
                    },
                    error: function (error) {
                        $("#wait").css("display", "none");
                        formData = new FormData();
                        clearListFileUpload();
                        //alert("Error! File upload.");
                        //window.location.reload(true);
                        // $("#wait").css("display", "none");
                        $('#messageData').text("Error! File upload.Call auto refresh");
                        $('#messageData').css('color', 'red');
                        setTimeout(function () {
                            window.location.reload(true);
                        }, 2000);
                    }
                });
            }

        });


        $('#btnMasslst').click(function (e) {
            $('#fileuploadSearchTagList').click();
        });

        $('#fileuploadSearchTagList').change(function (e) {
            formDataTagList.append("SearchTagList", document.getElementById("fileuploadSearchTagList").files[0])
            $("#wait").css("display", "block");
            $.ajax({
                type: "POST",
                url: '@Url.Action("MassUploadSearchData", "FHFile")',
                data: formDataTagList,
                dataType: 'json',
                contentType: false,
                processData: false,
                enctype: 'multipart/form-data',
                success: function (data) {
                    debugger;
                    $("#wait").css("display", "none");
                    formDataTagList = new FormData();
                    if (data.msg == '' && data.response.length > 0) {
                        // process data
                        //alert('process')
                        $.each(data.response, function (i, e) {
                            //bindData(response[i].CountryName, response[i].UNCode, response[i].Alpha2, response[i].Alpha3);
                            //bindData(SearchDataName, TagName, Instruction)
                            var product = {};
                            product.Name = data.response[i].SearchWord;
                            product.Tag = data.response[i].TagName;
                            product.Expression = data.response[i].Instruction;
                            addToCart(product);
                            bindData(data.response[i].SearchWord, data.response[i].TagName, data.response[i].Instruction)
                        });
                    }
                    else {
                        //alert(data.msg);
                        $('#messageData').text(data.msg);
                        $('#messageData').css('color', 'red');
                        setTimeout(function () {
                            $('#messageData').text('');
                        }, 3000);
                    }

                },
                error: function (error) {
                    $("#wait").css("display", "none");
                    formDataTagList = new FormData();
                    //alert("Error! File upload search data.");
                    $('#messageData').text("Error! File upload search data.");
                    $('#messageData').css('color', 'red');
                    setTimeout(function () {
                        $('#messageData').text('');
                    }, 3000);
                }
            });
        });
    });


    function clearListFileUpload() {
        $('#fileupload').val('');
        $('#fileList').text('');
        filearr.pop();
    }

    function previewDocument(data) {
        debugger;
         var url='@Url.Action("ViewFile", "FHManage")';
                    $("#wait").css("display", "none");
                    formDataViewFile = new FormData();
        $('#previewData').html('');
        $('#previewData').load(url + '?FilePath=' + data)
    }

    function ClearSearchDataList() {
        $('#SearchData').val('');
        $('#ddlTag').val('0');
        $('#Instruction').val('0');
        $('#tblTagSearch > tbody').html("");
        var cart = JSON.parse(localStorage.getItem('cart'));
        for (var i = 0; i < cart.products.length; i++) {
            cart.products.splice(i);
        }
        localStorage.setItem('cart', JSON.stringify(cart));
        $('#tblTagSearch').hide();

    }

    function addToCart(product) {
        // Retrieve the cart object from local storage
        $('#tblTagSearch').show();
        if (localStorage && localStorage.getItem('cart'))
        {
            var cart = JSON.parse(localStorage.getItem('cart'));
            cart.products.push(product);
            localStorage.setItem('cart', JSON.stringify(cart));
        }
    }

    function bindData(SearchDataName, TagName, Instruction) {


           //Get the reference of the Table's TBODY element.
        var tBody = document.getElementById("tblTagSearch").getElementsByTagName("TBODY")[0];

           // //Add Row.
           // row = tBody.insertRow(-1);

           // //Add Name cell.
           // var cell = row.insertCell(-1);
           // cell.innerHTML = SearchDataName;

           // //Add Tag cell.
           // cell = row.insertCell(-1);
           //cell.innerHTML = escapeHTML(TagName);

           // //Add Expression cell.
           // var cell = row.insertCell(-1);
           // cell.innerHTML = Instruction;

           // //Add Button cell.
           // cell = row.insertCell(-1);
           // var btnRemove = document.createElement("INPUT");
           // btnRemove.type = "button";
           // btnRemove.value = "Remove";
           // btnRemove.setAttribute("onclick", "Remove(this);");
           // cell.appendChild(btnRemove);
        //  var btnRemove = document.createElement("INPUT");
        //    btnRemove.type = "button";
        //    btnRemove.value = "Remove";
        //btnRemove.setAttribute("onclick", "Remove(this);");
        var btnRemove="<button onclick='Remove(this);'>Remove</button>"
        row = $("<tr></tr>");
        col1 = $("<td>" + SearchDataName+"</td>");
        col2 = $("<td>" + escapeHTML(TagName)+"</td>");
        col3 = $("<td>" + Instruction+"</td>");
        col4 = $("<td>" + btnRemove+"</td>");
        row.append(col1, col2, col3, col4).prependTo(tBody);


    }

    function Remove(button) {

        //Determine the reference of the Row using the Button.
        var row = button.parentNode.parentNode;
        var name = row.getElementsByTagName("TD")[0].innerHTML;
        var tag = row.getElementsByTagName("TD")[1].innerHTML;
        var Expression = row.getElementsByTagName("TD")[2].innerHTML;
        //if (confirm("Do you want to delete: " + name)) {

            //Get the reference of the Table.
        var table = document.getElementById("tblTagSearch");

            //Delete the Table row using it's Index.
            table.deleteRow(row.rowIndex);

            var product = {};
            product.Name = name;
            product.Tag = reverseescapeHTML(tag);
            product.Expression = Expression;

            //Remove item from local storage
            RemoveItem(product);

       // }
    };


    function RemoveItem(product)
    {

        var cart = JSON.parse(localStorage.getItem('cart'));

        for (var i = 0; i < cart.products.length; i++)
        {
            if (cart.products[i].Name === product.Name) {
                cart.products.splice(i, 1);
            }

        }

        localStorage.setItem('cart', JSON.stringify(cart));
        if ($('#tblTagSearch >tbody >tr').length == 0)
        {
            $('#tblTagSearch').hide();
        }

    }



    //bytpass the special characters
    function escapeHTML(html) {
        return html.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
    }


    function reverseescapeHTML(html) {

        return html.replace(/&lt;/g, '<').replace(/&gt;/g, '>');
    }

    // Validate add tag data

    function ValidateAddtag()
    {
        var flag = false;
        var newTagName = 0, newTagDesc = 0;

        if ($('#newTagName').val().trim() == '')
        {
            $('#newTagName').addClass("validateClass");
            newTagName = -1;
        }
        else
        {
            $('#newTagName').removeClass("validateClass");
            newTagName = 0;

        }
        if ($('#newTagDesc').val().trim() == '')
        {
            $('#newTagDesc').addClass("validateClass");
           newTagDesc = -1;

        }
       else
        {
            $('#newTagDesc').removeClass("validateClass");
           newTagDesc = 0;

        }

        if (newTagName == 0 && newTagDesc == 0)
        {
            flag = true;
        }

        return flag

    }

    //Validate validateAddToList()
    function validateAddToList() {
        var flag = false;
        var SearchData = 0, ddlTag = 0;
        if ($('#SearchData').val().trim() == '') {
            SearchData = -1;
            $('#SearchData').addClass("validateClass");

        }
        else {

            SearchData = 0;
            $('#SearchData').removeClass("validateClass");

        }
        if ($('#ddlTag').val() == "0") {
            ddlTag = -1;
            $('#ddlTag').addClass("validateClass");

        }
        else {

            ddlTag = 0;
            $('#ddlTag').removeClass("validateClass");

        }


        if (SearchData == 0 && ddlTag == 0) {
            flag = true;
        }
        return flag;

    }

    function validateUploadData() {

        var flag = false;
        var fileupload = 0, Sectore = 0, templateName = 0, templateDesc = 0;
        if ($('#fileupload').val().trim() == '') {
            $("#fileupload").addClass("filectrl");
            fileupload = -1;

        }
        else {
            fileupload = 0;
        }


        if ($('#Sectore').val().trim() == "0") {
            $('#Sectore').addClass("validateClass");
            Sectore = -1;

        }
        else {
            $('#Sectore').removeClass("validateClass");
            Sectore = 0;
        }

        //if ($('#templateName').val().trim() == '') {
        //    $('#templateName').addClass("validateClass");
        //    templateName = -1;

        //}
        //else {
        //    $('#templateName').removeClass("validateClass");
        //    templateName = 0;
        //}

        //if ($('#templateDesc').val().trim() == '') {
        //    $('#templateDesc').addClass("validateClass");
        //    templateDesc = -1;

        //}
        //else {
        //    $('#templateDesc').removeClass("validateClass");
        //    templateDesc = 0;
        //}



        if (fileupload == 0 && Sectore == 0 && templateName == 0 && templateDesc == 0) {
            flag = true;

        }

        return flag;

    }

    function validatetable()
    {
        var flag = false;
        if ($('#tblTagSearch >tbody >tr').length == 0) {
            flag = false;
            alert("Please add Tag list!");

        }
        else {
            flag = true;
            tblTagSearch = 0;
        }

        return flag;
    }




    $('#btnsave').click(function ()
    {
        var flag = false;
        flag=  ValidateAddtag();

        if (flag === true) {
            var Tagdata = {};
            Tagdata.TagName = $('#newTagName').val().trim();
            Tagdata.Description = $('#newTagDesc').val().trim();
            Tagdata.UserID = "C";
            Tagdata.Orig = "C";
            Tagdata.GlobPri = "P";

            $.ajax({
                type: "POST",
                url: '@Url.Action("AddTagDetails", "FHFile")',
                data: JSON.stringify(Tagdata),
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                success: function (msg) {

                    alert(msg);
                    $('#myModal').modal('hide');
                    $('#newTagName').val('');
                    $('#newTagDesc').val('');

                    bindTagDropdownlist();
                },
                error: function (error) {
                    //alert("Error! Please try again.");
                    $('#messageData').text("Error! Please try again.");
                    $('#messageData').css('color', 'red');
                    setTimeout(function () {
                        $('#messageData').text('');
                    }, 3000);
                }
            });
        }

    });

    // Bind tag dropdown list

    function bindTagDropdownlist()
    {
        $(function () {
            var ddlTags = $("#ddlTag");
            ddlTags.empty().append('<option selected="selected" value="0" disabled = "disabled">Loading.....</option>');
            $.ajax({
                type: "GET",
                url:'@Url.Action("GetTagList", "FHFile")', //"/FHFile/GetTagList",
                success: function (response) {
                    ddlTags.empty().append('<option selected="selected" value="0">Select Tag</option>');
                    $.each(response, function () {
                        ddlTags.append($("<option></option>").val(this['Value']).html(escapeHTML(this['Text'])));

                    });
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        });

    }

    function getUrlVars() {
        var vars = [], hash;
        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
        for (var i = 0; i < hashes.length; i++) {
            hash = hashes[i].split('=');
            vars.push(hash[0]);
            vars[hash[0]] = hash[1];
        }
        return vars;
    }

</script>
