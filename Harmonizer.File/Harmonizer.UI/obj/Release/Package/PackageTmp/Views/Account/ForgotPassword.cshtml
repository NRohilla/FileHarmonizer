@model Harmonizer.UI.Models.ForgotPassword

@{
    ViewBag.Title = "File Harmonizer - Forgot Password";
}


@using (Html.BeginForm(Html.BeginForm("RestPassword", "Account", routeValues: new { returnUrl = Request.QueryString["ReturnUrl"] }, method: FormMethod.Post)))
{
    
    @Html.AntiForgeryToken()

<div class="form-horizontal my-3">
    <div class="container">
        <div class="blink_heading"><h4>Reset Password</h4></div>
        <hr />
        <div class="bg-white p-3 border">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="row">
                    <div class="col-md-10">
                        @if (Convert.ToString(TempData["message"]) != "")
                    {
                        <span class="text-danger">
                            @TempData["message"]
                        </span>
                }
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.ConfirmaPassword, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.ConfirmaPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmaPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-2">
                        &nbsp;
                    </div>
                    <div class="col-md-10 text-right">
                        <input type="submit" value="Reset" class="btn btn-info" />
                    </div>
                </div>
            </div>
</div>

    </div>
</div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
