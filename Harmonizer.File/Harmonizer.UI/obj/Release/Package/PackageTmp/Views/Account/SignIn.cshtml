@model Harmonizer.UI.Models.UserLogin

@{
    ViewBag.Title = "File Harmonizer - Login";
}


@using (Html.BeginForm(Html.BeginForm("Login", "Account", routeValues: new { returnUrl = Request.QueryString["ReturnUrl"] }, method: FormMethod.Post)))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal my-3">
        <div class="container">
            <div class="blink_heading">
                <h4>Login</h4>
            </div>
            <hr />
            <div class="w-100 float-left py-2">
                @*<div class="float-left pr-4">
                                    <input type="checkbox" value="UserIDPassword" id="chkUserId" class="check" /> <span class="text-info">Login using UserId and Password</span>

                                </div>
                                <div class="float-left px-2">
                                    <input type="checkbox" value="BPIDPassword" id="chkBPId" class="uncheck" /> <span class="text-info">Login using BPID and password</span>
                    </div>*@
            </div>
            <div class="w-100 float-left bg-white p-3 border">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-10">
                            @if (Convert.ToString(TempData["message"]) != "")
                            {
                                <span class="text-danger">
                                    @TempData["message"]
                                </span>
                            }
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label", @ID = "lblUserID" })
                        </div>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })

                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-2">
                            &nbsp;
                        </div>
                        <div class="col-md-4 text-right">
                            <input type="submit" value="Login" class="btn btn-info float-left" />
                            <span class="d-block float-right"><a href='@Url.Action("ForgotPassword","Account")'>Forgt Password</a></span>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        <div class="col-md-2">

                        </div>
                        <div class="col-md-10 font-italic font-weight-light">

                            By Clicking the "Login" button, you agree to File Harmonizer's
                            <a href='@Url.Action("TermAndCondition","Home")'>Terms of Service</a> and <a href='@Url.Action("PrivacyPolicy","Home")'>Privacy Policy</a>

                        </div>

                    </div>
                </div>
                @*set the value of usertype in hidden field*@
                @*@Html.HiddenFor(model => model.LoginType, new { @Id = "LoginType" })*@

            </div>
        </div>

    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
}

<script type="text/javascript">
    $(document).ready(function () {
        //$("#chkUserId").prop("checked", true);
        //$('#LoginType').val($('#lblUserID').text());
        var UserId = getUrlVars()["UserId"];
        if (UserId === undefined) {
            $('#UserID').val("");
            $('#Password').val("");
        }
        else {
            $('#UserID').val(UserId);

        }

        //setUseIdlabelvalue();
    });


    function getUrlVars() {
        var vars = [], hash;
        var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
        for (var i = 0; i < hashes.length; i++) {
            hash = hashes[i].split('=');
            vars.push(hash[0]);
            vars[hash[0]] = hash[1];
        }
        return vars;
    }

        //function setUseIdlabelvalue() {
        //    $(".check").click(function () {
        //        $("#chkUserId").prop("checked", true);
        //        $("#chkBPId").attr("checked", false);
        //        $('#lblUserID').text('User ID');
        //        $('#LoginType').val($('#lblUserID').text());

        //    });
        //    $(".uncheck").click(function () {
        //        $("#chkBPId").prop("checked", true);
        //        $("#chkUserId").prop("checked", false);
        //        $('#lblUserID').text('BP ID');
        //        $('#LoginType').val($('#lblUserID').text());
        //    });
        //}


</script>


