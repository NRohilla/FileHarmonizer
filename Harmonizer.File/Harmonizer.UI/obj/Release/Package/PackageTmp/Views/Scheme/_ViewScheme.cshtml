@model Harmonizer.UI.Models.SchemeDetails
<div class="accordion" id="accordionExample">
    <div class="card">
        <div class="card-header p-0 pl-3 pr-3" id="headingOne">
            <h5 class="mb-0">
                <button class="btn btn-link w-100 text-left p-0" type="button" data-toggle="collapse" data-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                    <h4 style="font-size:1.2em;">
                        <span id="lblAddress">Scheme information</span>
                        <span class=" float-right">
                            <i class="fa fa-angle-down"></i>
                        </span>
                    </h4>
                </button>
            </h5>
        </div>
        <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#accordionExample">
            <div class="card-body">
                <div class="my-2">
                    <input type="hidden" id="hiddenSchemeViewID" value="@Model.SchemeInfo.ID" />
                    <div class="row  mt-3">
                        <div class="col-md-2">
                            <label class="control-label">Scheme #</label>
                        </div>
                        <div class="col-md-3">
                            <input type="text" class="form-control" id="txtScheme" value="@Model.SchemeInfo.SchemeNum" readonly />
                        </div>
                        <div class="col-md-2">
                            <label class="control-label">Scheme Type</label>
                        </div>
                        <div class="col-md-3">

                            <input type="text" class="form-control" id="txtSchemeType" value="@Model.SchemeInfo.SchemeType" readonly />

                        </div>
                    </div>
                    <div class="row  mt-3">
                        <div class="col-md-2">
                            <label class="control-label">Client #</label>
                        </div>
                        <div class="col-md-3">
                            <input type="text" class="form-control" id="txtClinetNum" value="@Model.SchemeInfo.Client" />
                        </div>
                        <div class="col-md-2">
                            <label class="control-label">Registration Type</label>
                        </div>
                        <div class="col-md-3">
                            <input type="text" class="form-control" id="txtRegistrationType" value="@Model.SchemeInfo.RegistrationType" readonly />
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-md-2">
                            <label class="control-label">Scheme Name</label>
                        </div>
                        <div class="col-md-3">
                            <input type="text" class="form-control" id="txtSchemeName" value="@Model.SchemeInfo.SchemeName" />
                        </div>
                        <div class="col-md-2">
                            <label class="control-label">Scheme Description</label>
                        </div>
                        <div class="col-md-3">
                            <input type="text" class="form-control" id="txtSchemeDesc" value="@Model.SchemeInfo.SchemeDescription" />
                        </div>
                    </div>


                    <div class="row  mt-3">
                        <div class="col-md-2">
                            <label class="control-label">Name</label>
                        </div>
                        <div class="col-md-3">
                            <input type="text" class="form-control" id="txtName" value="@Model.SchemeInfo.Name" />
                        </div>
                        <div class="col-md-2">
                            <label class="control-label">Project Type</label>
                        </div>
                        <div class="col-md-3">
                            <input type="text" class="form-control" id="txtProjectType" value="@Model.SchemeInfo.ProjectType" />
                        </div>
                    </div>
                    <div class="row  mt-3">
                        <div class="col-md-2">
                            <label class="control-label">Project Name</label>
                        </div>
                        <div class="col-md-3">
                            <input type="text" class="form-control" id="txtProjectName" value="@Model.SchemeInfo.ProjectName" />
                        </div>
                        <div class="col-md-2">
                            <label class="control-label">Project Description</label>
                        </div>
                        <div class="col-md-3">
                            <input type="text" class="form-control" id="txtProjectDesc" value="@Model.SchemeInfo.ProjectDescription" />
                        </div>
                    </div>
                    <div class="row  mt-3">
                        <div class="col-md-2">
                            <label class="control-label">Project Start Date</label>
                        </div>
                        <div class="col-md-3">
                            <input type="text" class="form-control" id="txtProjectStartDate1" value="@String.Format("{0}",Model.SchemeInfo.ProjectStartDate.ToShortDateString())" placeholder="mm/dd/yyyy" size=10 maxlength=10 onkeyup="this.value=this.value.replace(/^(\d\d)(\d)$/g,'$1/$2').replace(/^(\d\d\/\d\d)(\d+)$/g,'$1/$2').replace(/[^\d\/]/g,'')" />
                            <i style="position: absolute; right: 25px; top: 12px;" class="fa fa-calendar ui-datepicker-trigger"></i>
                        </div>
                        <div class="col-md-2">
                            <label class="control-label">Project End Date</label>
                        </div>
                        <div class="col-md-3">
                            <input type="text" class="form-control" id="txtProjectEndDate1" value="@String.Format("{0}",Model.SchemeInfo.ProjectEndDate.ToShortDateString())" placeholder="mm/dd/yyyy" size=10 maxlength=10 onkeyup="this.value=this.value.replace(/^(\d\d)(\d)$/g,'$1/$2').replace(/^(\d\d\/\d\d)(\d+)$/g,'$1/$2').replace(/[^\d\/]/g,'')" />
                            <i style="position: absolute; right: 25px; top: 12px;" class="fa fa-calendar componycal ui-datepicker-trigger"></i>
                        </div>
                    </div>
                    <div class="row  mt-3">
                        <div class="col-md-2">
                            <label class="control-label">Suggestion</label>
                        </div>
                        <div class="col-md-3">
                            @*<input type="text" class="form-control" multiple id="txtSchemeSuggestion" value="@Model.SchemeInfo.Suggestion" />*@
                            @Html.TextAreaFor(Model=>Model.SchemeInfo.Suggestion,new { id = "txtSchemeSuggestion", maxlength = "400", placeholder = "Suggestion",@class="form-control" })
                            @*<textarea class="form-control" id="txtSchemeSuggestion" maxlength="400" placeholder="Suggestion" value="@Model.SchemeInfo.Suggestion"></textarea>*@
                        </div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-md-2">
                            <input type="button" class="btn btn-info" id="btnUpdate" value="Update" />
                        </div>
                        @*<div class="col-md-2">
                                <input type="button" class="btn btn-info" id="btnCancel" value="Cancel" />
                            </div>*@
                        <div class="col-md-8">
                            <blink>
                                <span style="color:red;font-size:18px;" id="messageData" class="blink">

                                </span>
                            </blink>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

    <div class="card">
        <div class="card-header p-0 pl-3 pr-3" id="headingTwo">
            <h5 class="mb-0">
                <button class="btn btn-link w-100 text-left p-0" type="button" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                    <h4 style="font-size:1.2em;">
                        <span id="lbldetails">Scheme details</span>
                        <span class=" float-right">
                            <i class="fa fa-angle-down"></i>
                        </span>
                    </h4>
                </button>
            </h5>
        </div>
        
            <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionExample">
                <div class="card-body">
                    <div class="my-2">
                        <div class="sch_table">
                            @if (Model.SchemeDetail.Count > 0)
                            {
                              <table class="table table-bordered table-sm table-striped search-replace-table sticky-header" style="max-height:380px; overflow:auto;">
                                  <tr style="background-color:#9370DB;color:white;">
                                      <th>FHNumber</th>
                                      <th>Scheme</th>
                                      <th>Proj. Name</th>
                                      <th>Proj. Desc.</th>
                                      <th>Start Date</th>
                                      <th>End Date</th>
                                      <th>Sector</th>
                                      <th>Filter Name</th>
                                      <th>Temp. Name</th>
                                      <th>Harmnz. Name</th>
                                  </tr>
                                  <tbody>
                                  @foreach(var item in Model.SchemeDetail)
                                  {
                                  <tr>
                                      <td>@item.FHNumber</td>
                                      <td>@item.SchemeNum</td>
                                      <td>@item.ProjectName</td>
                                      <td>@item.ProjectDescription</td>
                                      <td>@String.Format("{0:d}",item.ProjectStartDate)</td>
                                      <td>@String.Format("{0:d}", item.ProjectEndDate)</td>
                                      <td>@item.Sector</td>
                                      <td>@item.FilterName</td>
                                      <td>@item.TemplateName</td>
                                      <td>@item.HarmonizeName</td>
                                  </tr>
                                  }
                                      </tbody>
                              </table>
                            }
                            else
                            {
                                <span style="color:red;">No details found!</span>
                            }
                        </div> 
                    </div>
                </div>
            </div>
        </div>
    </div>


<script>
    $(document).ready(function () {
        // calendar
        $("#txtProjectStartDate1").datepicker({

            dateFormat: "mm/dd/yy",
            //yyyy/mm/dd
            changeMonth: true,
            changeYear: true
        });
        $('.fa-calendar').click(function () {
            $("#txtProjectStartDate1").focus();

        });
        $("#txtProjectEndDate1").datepicker({

            dateFormat: "mm/dd/yy",
            //yyyy/mm/dd
            changeMonth: true,
            changeYear: true
        });
        $('.componycal').click(function () {
            $("#txtProjectEndDate1").focus();

        });
        // end


        $('#txtClinetNum').change(function () {
            var BPID = $('#txtClinetNum').val().trim();
            // Ajax call
            $.ajax({
                type: "POST",
                url: '@Url.Action("CheckBPIDExist", "Scheme")',
                data: '{BPID: "' + BPID + '"}',
                dataType: "json",
                contentType: 'application/json; charset=utf-8',
                async: false,
                cache: false,
                success: function (data) {
                    if (data < 1) {
                        // alert("success");
                        $('#messageData').text("Client Id not exist");
                        $('#messageData').css('color', 'red');
                        setTimeout(function () {
                            $('#messageData').text('');
                        }, 2000);
                    }
                },
                error: function (error) {
                    // alert("Error! Please try again.");
                    $('#messageData').text("Error! Please try again.");
                    $('#messageData').css('color', 'red');
                    setTimeout(function () {
                        $('#messageData').text('');
                    }, 2000);
                }
            });

        });

        $('#btnUpdate').click(function (e) {
            debugger;
            var userScheme = {};
            userScheme.ProjectEndDate = $('#txtProjectEndDate1').val().trim();
            userScheme.ProjectStartDate = $('#txtProjectStartDate1').val().trim();
            userScheme.ProjectDescription = $('#txtProjectDesc').val().trim();
            userScheme.ProjectName = $('#txtProjectName').val().trim();
            userScheme.ProjectType = $('#txtProjectType').val().trim();
            userScheme.SchemeDescription = $('#txtSchemeDesc').val().trim();
            userScheme.SchemeName = $('#txtSchemeName').val().trim();
            userScheme.Name = $('#txtName').val().trim();
            userScheme.ID = $('#hiddenSchemeViewID').val().trim();
            userScheme.Client = $('#txtClinetNum').val().trim();
            userScheme.Suggestion = $('#txtSchemeSuggestion').val().trim();
            if (Validatedata() == false) {
                return;
            }
            else {
                 // Ajax call
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("UpadateScheme", "Scheme")',
                    data: JSON.stringify(userScheme),
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    async: false,
                    cache: false,
                    success: function (data) {
                        if (data >= 1) {
                            // alert("success");
                            $('#messageData').text("Successfully updated scheme");
                            $('#messageData').css('color', 'green');
                            setTimeout(function () {
                                window.location.reload(true);
                            }, 2000);
                            
                        }
                        else {
                            $('#messageData').text("Error! Please try again.");
                            $('#messageData').css('color', 'red');
                            setTimeout(function () {
                                //window.location.reload(true);
                                $('#messageData').text('');
                            }, 2000);
                        }
                    },
                    error: function (error) {
                        debugger;
                        // alert("Error! Please try again.");
                        $('#messageData').text("Error! Please try again.");
                        $('#messageData').css('color', 'red');
                        setTimeout(function () {
                            window.location.reload(true);
                        }, 2000);
                    }
                });
            }

        });
    });
    function Validatedata() {
        var txtProjectEndDate = 0, txtProjectStartDate = 0, txtProjectDesc = 0, txtProjectName = 0, txtProjectType = 0,
            txtRegistrationType = 0, txtClinetNum = 0, txtSchemeDesc = 0, txtSchemeName = 0, txtSchemeType = 0, txtScheme = 0, txtName = 0;

        if ($('#txtProjectEndDate1').val().trim() == '') {
            $('#txtProjectEndDate1').addClass("validateClass");
            txtProjectEndDate = -1;
        }
        else {

            if (validatedate($('#txtProjectEndDate1').val(), 'txtProjectEndDate')) {
                $('#txtProjectEndDate1').removeClass("validateClass");
                txtProjectEndDate = 0;

            } else {
                $('#txtProjectEndDate1').addClass("validateClass");
                txtProjectEndDate = -1;
            }
        }

        if ($('#txtProjectStartDate1').val().trim() == '') {
            $('#txtProjectStartDate1').addClass("validateClass");
            txtProjectStartDate = -1;
        }
        else {
            if (validatedate($('#txtProjectStartDate1').val(), 'txtProjectStartDate')) {
                $('#txtProjectStartDate1').removeClass("validateClass");
                txtProjectStartDate = 0;

            } else {
                $('#txtProjectStartDate1').addClass("validateClass");
                txtProjectStartDate = -1;
            }
        }

        if ($('#txtProjectDesc').val().trim() == '') {
            $('#txtProjectDesc').addClass("validateClass");
            txtProjectDesc = -1;
        }
        else {
            $('#txtProjectDesc').removeClass("validateClass");
            txtProjectDesc = 0;

        }

        if ($('#txtProjectType').val().trim() == '') {
            $('#txtProjectType').addClass("validateClass");
            txtProjectType = -1;
        }
        else {
            $('#txtProjectType').removeClass("validateClass");
            txtProjectType = 0;

        }

        if ($('#txtSchemeDesc').val().trim() == '') {
            $('#txtSchemeDesc').addClass("validateClass");
            txtSchemeDesc = -1;
        }
        else {
            $('#txtSchemeDesc').removeClass("validateClass");
            txtSchemeDesc = 0;

        }

        if ($('#txtSchemeName').val().trim() == '') {
            $('#txtSchemeName').addClass("validateClass");
            txtSchemeName = -1;
        }
        else {
            $('#txtSchemeName').removeClass("validateClass");
            txtSchemeName = 0;

        }

        if ($('#txtScheme').val().trim() == '') {
            $('#txtScheme').addClass("validateClass");
            txtScheme = -1;
        }
        else {
            $('#txtScheme').removeClass("validateClass");
            txtScheme = 0;

        }

        if ($('#txtName').val().trim() == '') {
            $('#txtName').addClass("validateClass");
            txtName = -1;
        }
        else {
            $('#txtName').removeClass("validateClass");
            txtName = 0;

        }

        if ($('#txtProjectName').val().trim() == '') {
            $('#txtProjectName').addClass("validateClass");
            txtProjectName = -1;
        }
        else {
            $('#txtProjectName').removeClass("validateClass");
            txtProjectName = 0;

        }
        //
        if (txtProjectEndDate == 0 && txtProjectStartDate == 0 && txtProjectDesc == 0 && txtProjectName == 0 && txtProjectType == 0 && txtRegistrationType == 0 && txtClinetNum == 0 && txtSchemeDesc == 0 && txtSchemeName == 0 && txtSchemeType == 0 && txtScheme == 0 && txtName == 0) {
            return true;
        }
        else {
            return false;
        }
    }


    function validatedate(inputText, Element) {
        var returnValue = true;
        var dateformat = /^(0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])[\/\-]\d{4}$/;
        // Match the date format through regular expression
        if (inputText.match(dateformat)) {
            $('#' + Element + '').focus();
            //Test which seperator is used '/' or '-'
            var opera1 = inputText.split('/');
            var opera2 = inputText.split('-');
            lopera1 = opera1.length;
            lopera2 = opera2.length;
            // Extract the string into month, date and year
            if (lopera1 > 1) {
                var pdate = inputText.split('/');
            }
            else if (lopera2 > 1) {
                var pdate = inputText.split('-');
            }
            var mm = parseInt(pdate[0]);
            var dd = parseInt(pdate[1]);
            var yy = parseInt(pdate[2]);
            // Create list of days of a month [assume there is no leap year by default]
            var ListofDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
            if (mm == 1 || mm > 2) {
                if (dd > ListofDays[mm - 1]) {
                    //alert('Invalid date format!');
                    returnValue = false;
                }
            }
            if (mm == 2) {
                var lyear = false;
                if ((!(yy % 4) && yy % 100) || !(yy % 400)) {
                    lyear = true;
                }
                if ((lyear == false) && (dd >= 29)) {
                    //alert('Invalid date format!');
                    return false;
                }
                if ((lyear == true) && (dd > 29)) {
                    //alert('Invalid date format!');
                    returnValue = false;
                }
            }
        }
        else {
            //alert("Invalid date format!");
            $('#' + Element + '').focus();
            returnValue = false;
        }
        return returnValue;
    }
</script>
